// <auto-generated />
using System;
using AtencionApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AtencionApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201113054349_Entities Ok")]
    partial class EntitiesOk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AtencionApi.Entities.Attention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttentionBoxId")
                        .HasColumnType("int");

                    b.Property<int?>("AttentionDoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("CallId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinishHour")
                        .HasColumnType("int");

                    b.Property<int>("InitHour")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttentionBoxId");

                    b.HasIndex("AttentionDoctorId");

                    b.HasIndex("CallId");

                    b.ToTable("Attentions");
                });

            modelBuilder.Entity("AtencionApi.Entities.AttentionBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttentionId")
                        .HasColumnType("int");

                    b.Property<int>("BoxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AttentionBoxes");
                });

            modelBuilder.Entity("AtencionApi.Entities.AttentionDoctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttentionId")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AttentionDoctors");
                });

            modelBuilder.Entity("AtencionApi.Entities.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttentionBoxId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttentionBoxId");

                    b.ToTable("Boxes");
                });

            modelBuilder.Entity("AtencionApi.Entities.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttentionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("AtencionApi.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttentionDoctorId")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttentionDoctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("AtencionApi.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttentionId")
                        .HasColumnType("int");

                    b.Property<string>("MedicalPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rut")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttentionId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("AtencionApi.Entities.Attention", b =>
                {
                    b.HasOne("AtencionApi.Entities.AttentionBox", "AttentionBox")
                        .WithMany("Attentions")
                        .HasForeignKey("AttentionBoxId");

                    b.HasOne("AtencionApi.Entities.AttentionDoctor", "AttentionDoctor")
                        .WithMany("Attentions")
                        .HasForeignKey("AttentionDoctorId");

                    b.HasOne("AtencionApi.Entities.Call", "Call")
                        .WithMany("Attentions")
                        .HasForeignKey("CallId");
                });

            modelBuilder.Entity("AtencionApi.Entities.Box", b =>
                {
                    b.HasOne("AtencionApi.Entities.AttentionBox", "AttentionBox")
                        .WithMany("Boxes")
                        .HasForeignKey("AttentionBoxId");
                });

            modelBuilder.Entity("AtencionApi.Entities.Doctor", b =>
                {
                    b.HasOne("AtencionApi.Entities.AttentionDoctor", "AttentionDoctor")
                        .WithMany("Doctors")
                        .HasForeignKey("AttentionDoctorId");
                });

            modelBuilder.Entity("AtencionApi.Entities.Patient", b =>
                {
                    b.HasOne("AtencionApi.Entities.Attention", "Attention")
                        .WithMany("Patients")
                        .HasForeignKey("AttentionId");
                });
#pragma warning restore 612, 618
        }
    }
}
